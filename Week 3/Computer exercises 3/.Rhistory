rSqr_full = summary(fullmodel)$r.squared
# Explanatory variables: 4 chems
X <- as.matrix(cbind(rep(1, nrow(hald)), hald[,c(1,2,3,4)]))
# Response variable heat
y <- hald$HEAT
fit_helper_i <- function(tested_var, X,y) {
# Sample with replacement
# In testing significance of a explanatory variable, only the column of the variable is permuted, the rest stays unchanged
X[,tested_var + 1] <- sample(X[,tested_var + 1])
# plus 1 in the index above because X is combined with vector of 1s in
# X <- as.matrix(cbind(rep(1, nrow(hald)), hald[,c(1,2,3,4)]))
y_fitted <- X %*% solve((t(X) %*% X)) %*% t(X) %*% y
cor(y_fitted,y)^2
}
rSqr <- apply(tested_vars, 2, function(tested_var)  replicate(n_permute, fit_helper_i(tested_var,X,y)))
n_permute <- 2000
alpha <- 0.05
tested_vars = c(1,2,3,4) # Choose Chem1 to Chem4
rSqr_full = summary(fullmodel)$r.squared
# Explanatory variables: 4 chems
X <- as.matrix(cbind(rep(1, nrow(hald)), hald[,c(1,2,3,4)]))
# Response variable heat
y <- hald$HEAT
fit_helper_i <- function(tested_var, X,y) {
# Sample with replacement
# In testing significance of a explanatory variable, only the column of the variable is permuted, the rest stays unchanged
X[,tested_var + 1] <- sample(X[,tested_var + 1])
# plus 1 in the index above because X is combined with vector of 1s in
# X <- as.matrix(cbind(rep(1, nrow(hald)), hald[,c(1,2,3,4)]))
y_fitted <- X %*% solve((t(X) %*% X)) %*% t(X) %*% y
cor(y_fitted,y)^2
}
rSqr <- lapply(tested_vars, function(tested_var)  replicate(n_permute, fit_helper_i(tested_var,X,y)))
p_value <- apply(rSqr, 2, function(col_rSqr) sum(col_rSqr > rSqr_full)/length(col_rSqr))
n_permute <- 2000
alpha <- 0.05
tested_vars = c(1,2,3,4) # Choose Chem1 to Chem4
rSqr_full = summary(fullmodel)$r.squared
# Explanatory variables: 4 chems
X <- as.matrix(cbind(rep(1, nrow(hald)), hald[,c(1,2,3,4)]))
# Response variable heat
y <- hald$HEAT
fit_helper_i <- function(tested_var, X,y) {
# Sample with replacement
# In testing significance of a explanatory variable, only the column of the variable is permuted, the rest stays unchanged
X[,tested_var + 1] <- sample(X[,tested_var + 1])
# plus 1 in the index above because X is combined with vector of 1s in
# X <- as.matrix(cbind(rep(1, nrow(hald)), hald[,c(1,2,3,4)]))
y_fitted <- X %*% solve((t(X) %*% X)) %*% t(X) %*% y
cor(y_fitted,y)^2
}
rSqr <-sapply(tested_vars, function(tested_var)  replicate(n_permute, fit_helper_i(tested_var,X,y)))
p_value <- apply(rSqr, 2, function(col_rSqr) sum(col_rSqr > rSqr_full)/length(col_rSqr))
t(cbind(colnames(hald)[c(1,2,3,4)], p_value))
n_permute <- 2000
alpha <- 0.05
tested_vars = c(1,2,4) # Choose Chem1 to Chem4
rSqr_full = summary(fullmodel)$r.squared
# Explanatory variables: CHEM1, CHEM2, CHEM3
X <- as.matrix(cbind(rep(1, nrow(hald)), hald[,c(1,2,4)]))
# Response variable heat
y <- hald$HEAT
fit_helper_i <- function(tested_var, X,y) {
# Sample with replacement
# In testing significance of a explanatory variable, only the column of the variable is permuted, the rest stays unchanged
X[,tested_var + 1] <- sample(X[,tested_var + 1])
# plus 1 in the index above because X is combined with vector of 1s in
# X <- as.matrix(cbind(rep(1, nrow(hald)), hald[,c(1,2,3,4)]))
y_fitted <- X %*% solve((t(X) %*% X)) %*% t(X) %*% y
cor(y_fitted,y)^2
}
rSqr <-sapply(tested_vars, function(tested_var)  replicate(n_permute, fit_helper_i(tested_var,X,y)))
X
n_permute <- 2000
alpha <- 0.05
tested_vars = c("CHEM1","CHEM2","CHEM3", "CHEM4") # Choose Chem1 to Chem4
rSqr_full = summary(fullmodel)$r.squared
# Explanatory variables: 4 chems
X <- as.matrix(cbind(rep(1, nrow(hald)), hald[,c("CHEM1","CHEM2","CHEM3", "CHEM4")]))
# Response variable heat
y <- hald$HEAT
fit_helper_i <- function(tested_var, X,y) {
# Sample with replacement
# In testing significance of a explanatory variable, only the column of the variable is permuted, the rest stays unchanged
X[,tested_var + 1] <- sample(X[,tested_var + 1])
# plus 1 in the index above because X is combined with vector of 1s in
# X <- as.matrix(cbind(rep(1, nrow(hald)), hald[,c(1,2,3,4)]))
y_fitted <- X %*% solve((t(X) %*% X)) %*% t(X) %*% y
cor(y_fitted,y)^2
}
rSqr <-sapply(tested_vars, function(tested_var)  replicate(n_permute, fit_helper_i(tested_var,X,y)))
n_permute <- 2000
alpha <- 0.05
tested_vars = c("CHEM1","CHEM2","CHEM3", "CHEM4") # Choose Chem1 to Chem4
rSqr_full = summary(fullmodel)$r.squared
# Explanatory variables: 4 chems
X <- as.matrix(cbind(rep(1, nrow(hald)), hald[,c("CHEM1","CHEM2","CHEM3", "CHEM4")]))
# Response variable heat
y <- hald$HEAT
fit_helper_i <- function(tested_var, X,y) {
# Sample with replacement
# In testing significance of a explanatory variable, only the column of the variable is permuted, the rest stays unchanged
X[,tested_var] <- sample(X[,tested_var])
# plus 1 in the index above because X is combined with vector of 1s in
# X <- as.matrix(cbind(rep(1, nrow(hald)), hald[,c(1,2,3,4)]))
y_fitted <- X %*% solve((t(X) %*% X)) %*% t(X) %*% y
cor(y_fitted,y)^2
}
rSqr <-sapply(tested_vars, function(tested_var)  replicate(n_permute, fit_helper_i(tested_var,X,y)))
p_value <- apply(rSqr, 2, function(col_rSqr) sum(col_rSqr > rSqr_full)/length(col_rSqr))
t(cbind(colnames(hald)[c(1,2,3,4)], p_value))
n_permute <- 2000
alpha <- 0.05
tested_vars = c("CHEM1","CHEM2", "CHEM4") # Choose Chem1 to Chem4
rSqr_full = summary(fullmodel)$r.squared
# Explanatory variables: 4 chems
X <- as.matrix(cbind(rep(1, nrow(hald)), hald[,c("CHEM1","CHEM2", "CHEM4")]))
# Response variable heat
y <- hald$HEAT
fit_helper_i <- function(tested_var, X,y) {
# Sample with replacement
# In testing significance of a explanatory variable, only the column of the variable is permuted, the rest stays unchanged
X[,tested_var] <- sample(X[,tested_var])
# plus 1 in the index above because X is combined with vector of 1s in
# X <- as.matrix(cbind(rep(1, nrow(hald)), hald[,c(1,2,3,4)]))
y_fitted <- X %*% solve((t(X) %*% X)) %*% t(X) %*% y
cor(y_fitted,y)^2
}
rSqr <-sapply(tested_vars, function(tested_var)  replicate(n_permute, fit_helper_i(tested_var,X,y)))
p_value <- apply(rSqr, 2, function(col_rSqr) sum(col_rSqr > rSqr_full)/length(col_rSqr))
t(cbind(colnames(hald)[c(1,2,3,4)], p_value))
n_permute <- 2000
alpha <- 0.05
tested_vars = c("CHEM1","CHEM2", "CHEM4") # Choose Chem1 to Chem4
rSqr_full = summary(fullmodel)$r.squared
# Explanatory variables: 4 chems
X <- as.matrix(cbind(rep(1, nrow(hald)), hald[,c("CHEM1","CHEM2", "CHEM4")]))
# Response variable heat
y <- hald$HEAT
fit_helper_i <- function(tested_var, X,y) {
# Sample with replacement
# In testing significance of a explanatory variable, only the column of the variable is permuted, the rest stays unchanged
X[,tested_var] <- sample(X[,tested_var])
# plus 1 in the index above because X is combined with vector of 1s in
# X <- as.matrix(cbind(rep(1, nrow(hald)), hald[,c(1,2,3,4)]))
y_fitted <- X %*% solve((t(X) %*% X)) %*% t(X) %*% y
cor(y_fitted,y)^2
}
rSqr <-sapply(tested_vars, function(tested_var)  replicate(n_permute, fit_helper_i(tested_var,X,y)))
p_value <- apply(rSqr, 2, function(col_rSqr) sum(col_rSqr > rSqr_full)/length(col_rSqr))
t(cbind(colnames(hald)[c(1,2,4)], p_value))
n_permute <- 2000
alpha <- 0.05
tested_vars = c("CHEM1","CHEM2", "CHEM4") # Choose Chem1 to Chem4
rSqr_full = summary(fullmodel)$r.squared
# Explanatory variables: 4 chems
X <- as.matrix(cbind(rep(1, nrow(hald)), hald[,c("CHEM1","CHEM2", "CHEM4")]))
# Response variable heat
y <- hald$HEAT
fit_helper_i <- function(tested_var, X,y) {
# Sample with replacement
# In testing significance of a explanatory variable, only the column of the variable is permuted, the rest stays unchanged
X[,tested_var] <- sample(X[,tested_var])
# plus 1 in the index above because X is combined with vector of 1s in
# X <- as.matrix(cbind(rep(1, nrow(hald)), hald[,c(1,2,3,4)]))
y_fitted <- X %*% solve((t(X) %*% X)) %*% t(X) %*% y
cor(y_fitted,y)^2
}
rSqr <-sapply(tested_vars, function(tested_var)  replicate(n_permute, fit_helper_i(tested_var,X,y)))
p_value <- apply(rSqr, 2, function(col_rSqr) sum(col_rSqr > rSqr_full)/length(col_rSqr))
t(cbind(colnames(hald)[c(1,2,4)], p_value))
n_permute <- 2000
alpha <- 0.05
tested_vars = c("CHEM1","CHEM2","CHEM4")
rSqr_full = summary(fullmodel)$r.squared
# Explanatory variables: 4 chems
X <- as.matrix(cbind(rep(1, nrow(hald)), hald[,c("CHEM1","CHEM2", "CHEM4")]))
# Response variable heat
y <- hald$HEAT
fit_helper_i <- function(tested_var, X,y) {
# Sample with replacement
# In testing significance of a explanatory variable, only the column of the variable is permuted, the rest stays unchanged
X[,tested_var] <- sample(X[,tested_var])
# plus 1 in the index above because X is combined with vector of 1s in
# X <- as.matrix(cbind(rep(1, nrow(hald)), hald[,c(1,2,3,4)]))
y_fitted <- X %*% solve((t(X) %*% X)) %*% t(X) %*% y
cor(y_fitted,y)^2
}
rSqr <-sapply(tested_vars, function(tested_var)  replicate(n_permute, fit_helper_i(tested_var,X,y)))
p_value <- apply(rSqr, 2, function(col_rSqr) sum(col_rSqr > rSqr_full)/length(col_rSqr))
t(cbind(colnames(hald)[c(1,2,4)], p_value))
n_permute <- 2000
alpha <- 0.05
tested_vars = c("CHEM1","CHEM2")
rSqr_full = summary(fullmodel)$r.squared
# Explanatory variables: 4 chems
X <- as.matrix(cbind(rep(1, nrow(hald)), hald[,c("CHEM1","CHEM2")]))
# Response variable heat
y <- hald$HEAT
fit_helper_i <- function(tested_var, X,y) {
# Sample with replacement
# In testing significance of a explanatory variable, only the column of the variable is permuted, the rest stays unchanged
X[,tested_var] <- sample(X[,tested_var])
# plus 1 in the index above because X is combined with vector of 1s in
# X <- as.matrix(cbind(rep(1, nrow(hald)), hald[,c(1,2,3,4)]))
y_fitted <- X %*% solve((t(X) %*% X)) %*% t(X) %*% y
cor(y_fitted,y)^2
}
rSqr <-sapply(tested_vars, function(tested_var)  replicate(n_permute, fit_helper_i(tested_var,X,y)))
p_value <- apply(rSqr, 2, function(col_rSqr) sum(col_rSqr > rSqr_full)/length(col_rSqr))
t(cbind(colnames(hald)[c(1,2)], p_value))
step(fullmodel)
model4 <- lm(HEAT ~ CHEM1 + CHEM2 + CHEM4 , data=hald)
summary(model4)
crop <- read.table("crop.txt",header=T,sep="\t")
model1 <- lm(Yield~Fertilizer,data=crop)
FIT <- model1$fit
RES <- model1$res
plot(crop$Fertilizer, crop$Yield, ylab="Yield",
xlab="Fertilizer", pch=16,
main="Fertilizer/Yield in 33 cultivations")
abline(model1,col="red")
text(crop$Fertilizer, crop$Yield, labels=1:33, cex= 0.8,
pos=2)
plot(crop$Yield,FIT, ylab="Fits",xlab="Yield",pch=16,main="Yield - Estimated yield graph")
text(crop$Yield, FIT, labels=1:33, cex= 0.8, pos=2)
plot(FIT,RES, xlab="Fits",ylab="Residuals",pch=16, main="residuals of the estimated fits")
abline(h=0, col="red")
fertilizer = crop$Fertilizer
LSqrd <- fertilizer * fertilizer
model2 <- lm(Yield ~ fertilizer + LSqrd, data=crop)
fertilizer = crop$Fertilizer
LSqrd <- fertilizer * fertilizer
model2 <- lm(Yield ~ fertilizer + LSqrd, data=crop)
summary(model2)
plot(crop$Fertilizer, crop$Yield, ylab="Yield", xlab="Fertilizer", pch=16, main="Fertilizer/Yield in 33 cultivations")
curve((-2.4611*x^2 + 31.0812*x + 193.31), col="blue", from=0, to=10, ylab="Yield", xlab="Fertilizer",add=TRUE)
FIT <- model2$fit
RES <- model2$res
plot(FIT,RES, xlab="Fits",ylab="Residuals",pch=16, main="residuals of the estimated fits")
abline(h=0, col="red")
plot(Intel_Close)
source("C:/Users/nguye/Desktop/Prediction and Time Series Analysis/Week 3/Computer exercises 3-20211113/Demo3.R", echo=TRUE)
source("C:/Users/nguye/Desktop/Prediction and Time Series Analysis/Week 3/Computer exercises 3-20211113/Demo3.R", echo=TRUE)
source("C:/Users/nguye/Desktop/Prediction and Time Series Analysis/Week 3/Computer exercises 3-20211113/Demo3.R", echo=TRUE)
setwd("C:/Users/nguye/Desktop/Prediction and Time Series Analysis/Week 3/Computer exercises 3-20211113")
source("C:/Users/nguye/Desktop/Prediction and Time Series Analysis/Week 3/Computer exercises 3-20211113/Demo3.R", echo=TRUE)
?ts
View(INTEL)
plot(Intel_Close)
?ts
View(hald)
# No systematic trend (no growth/decay over time period)
# The level does seem to vary as a function of time, not caused by random variation
# Supply and demand for intel stock influences the level so in a sense the process is not stationary
# Short snapshot of price process might be approx stationary but estimates extracted
# are unlikely to be meaningful
spectrum_f(Intel_Close)
# No systematic trend (no growth/decay over time period)
# The level does seem to vary as a function of time, not caused by random variation
# Supply and demand for intel stock influences the level so in a sense the process is not stationary
# Short snapshot of price process might be approx stationary but estimates extracted
# are unlikely to be meaningful
spectrum_f(Intel_Close)
source("C:/Users/nguye/Desktop/Prediction and Time Series Analysis/Week 3/Computer exercises 3-20211113/Demo3.R", echo=TRUE)
source("C:/Users/nguye/Desktop/Prediction and Time Series Analysis/Week 3/Computer exercises 3-20211113/Demo3.R", echo=TRUE)
# No systematic trend (no growth/decay over time period)
# The level does seem to vary as a function of time, not caused by random variation
# Supply and demand for intel stock influences the level so in a sense the process is not stationary
# Short snapshot of price process might be approx stationary but estimates extracted
# are unlikely to be meaningful
spectrum_f(Intel_Close)
setwd("C:/Users/nguye/Desktop/Prediction and Time Series Analysis/Week 3/Computer exercises 3-20211113")
SALES <- read.table("INTEL.TXT",header=T)
View(SALES)
View(SALES)
SALES <- read.table("SALES.TXT",header=T)
View(SALES)
View(SALES)
SALES <- read.table("SALES.TXT",header=T)
salesTS <- ts(SALES$Sales)
SALES <- read.table("SALES.TXT",header=T)
salesTS <- ts(SALES$Sales)
spectrum_f = function(ts) {
spec_data <- spectrum(ts, plot=F)
plot(spec_data$freq, spec_data$spec)
}
plot(salesTS)
?ts
SALES <- read.table("SALES.TXT",header=T)
salesTS <- ts(SALES$Sales, start=SALES$Year[1], frequency=12)
spectrum_f = function(ts) {
spec_data <- spectrum(ts, plot=F)
plot(spec_data$freq, spec_data$spec)
}
plot(salesTS)
SALES <- read.table("SALES.TXT",header=T)
salesTS <- ts(SALES$Sales, start=SALES$Year[1], frequency=12)
spectrum_f = function(ts) {
spec_data <- spectrum(ts, plot=F)
plot(spec_data$freq, spec_data$spec)
}
plot(salesTS, xlab = "Year" ,ylab = "Sales", main = "Recorded sales in period 1970-1982")
?log
SALES <- read.table("SALES.TXT",header=T)
salesTS <- ts(SALES$Sales, start=SALES$Year[1], frequency=12)
spectrum_f = function(ts) {
spec_data <- spectrum(ts, plot=F)
plot(spec_data$freq, spec_data$spec)
}
plot(salesTS, xlab = "Year" ,ylab = "Sales", main = "Recorded sales in period 1970-1982")
spectrum(salesTS)
SALES <- read.table("SALES.TXT",header=T)
salesTS <- ts(SALES$Sales, start=SALES$Year[1], frequency=12)
spectrum_f = function(ts) {
spec_data <- spectrum(ts, plot=T)
plot(spec_data$freq, spec_data$spec)
}
plot(salesTS, xlab = "Year" ,ylab = "Sales", main = "Recorded sales in period 1970-1982")
spectrum(salesTS)
SALES <- read.table("SALES.TXT",header=T)
salesTS <- ts(SALES$Sales, start=SALES$Year[1], frequency=12)
spectrum_f = function(ts) {
spec_data <- spectrum(ts, plot=T)
plot(spec_data$freq, spec_data$spec,)
}
plot(salesTS, xlab = "Year" ,ylab = "Sales", main = "Recorded sales in period 1970-1982")
par(new=TRUE)
spectrum(salesTS)
SALES <- read.table("SALES.TXT",header=T)
salesTS <- ts(SALES$Sales, start=SALES$Year[1], frequency=12)
spectrum_f = function(ts) {
spec_data <- spectrum(ts, plot=T)
plot(spec_data$freq, spec_data$spec,)
}
plot(salesTS, xlab = "Year" ,ylab = "Sales", main = "Recorded sales in period 1970-1982")
spectrum(salesTS)
SALES <- read.table("SALES.TXT",header=T)
salesTS <- ts(SALES$Sales, start=SALES$Year[1], frequency=12)
plot(salesTS, xlab = "Year" ,ylab = "Sales", main = "Recorded sales in period 1970-1982")
SALES <- read.table("SALES.TXT",header=T)
salesTS1 <- ts(SALES$Sales, start=SALES$Year[1], frequency=12)
plot(salesTS1, xlab = "Year" ,ylab = "Sales", main = "Recorded sales in period 1970-1982")
salesTS2 <- diff(salesTS1)
plot(salesTS2, xlab = "Year" ,ylab = "Sales", main = "Recorded sales in period 1970-1982")
salesTS2 <- diff(salesTS1, lag=1)
plot(salesTS2, xlab = "Year" ,ylab = "Sales", main = "Recorded sales in period 1970-1982")
salesTS2 <- diff(salesTS1, lag=2)
plot(salesTS2, xlab = "Year" ,ylab = "Sales", main = "Recorded sales in period 1970-1982")
SALES <- read.table("SALES.TXT",header=T)
salesTS <- ts(SALES$Sales, start=SALES$Year[1], frequency=12)
plot(salesTS, xlab = "Year" ,ylab = "Sales", main = "Recorded sales in period 1970-1982")
salesTSLog <- log(salesTS1, lag=2)
salesTSLog <- log(salesTS1)
plot(salesTSLog, xlab = "Year" ,ylab = "Sales", main = "Recorded sales in period 1970-1982")
salesTSLog <- log(salesTS1)
plot(salesTSLog, xlab = "Year" ,ylab = "Sales (logarithmic scale)", main = "Recorded sales in period 1970-1982")
salesTSLog <- log(salesTS1)
plot(salesTSLog, xlab = "Year" ,ylab = "Sales (logarithmic scale)", main = "Recorded sales in period 1970-1982")
salesTSLog <- log(salesTS1)
plot(salesTSLog, xlab = "Year" ,ylab = "Sales (logarithmic scale)", main = "Recorded sales in period 1970-1982")
salesTSLog <- log(salesTS1)
plot(salesTSLog, xlab = "Year" ,ylab = "Sales (logarithmic scale)", main = "Recorded sales in period 1970-1982")
par(mfrow = c(1,2))
acf(salesTS)
acf(salesTSLog)
par(mfrow = c(1,2))
acf(salesTS)
acf(salesTSLog)
par(mfrow = c(2,2))
acf(salesTS)
acf(salesTSLog)
par(mfrow = c(1,2))
acf(salesTS)
acf(salesTSLog)
SALES <- read.table("SALES.TXT",header=T)
salesTS <- ts(SALES$Sales, start=SALES$Year[1], frequency=12)
plot(salesTS, xlab = "Year" ,ylab = "Sales", main = "Recorded sales in period 1970-1982")
salesTSLog <- log(salesTS)
plot(salesTSLog, xlab = "Year" ,ylab = "Sales (logarithmic scale)", main = "Recorded sales in period 1970-1982")
par(mfrow = c(1,2))
acf(salesTS)
acf(salesTSLog)
par(mfrow = c(1,2))
acf(salesTS, main = "salesTS")
acf(salesTSLog, main = "salesTSLog")
par(mfrow = c(1,2))
acf(salesTS, main = "salesTS", lag.max=50)
acf(salesTSLog, main = "salesTSLog")
par(mfrow = c(1,2))
acf(salesTS, main = "sales", lag.max=50)
acf(salesTSLog, main = "sales log")
par(mfrow = c(1,2))
acf(salesTS, main = "sales", lag.max=50)
acf(salesTSLog, main = "sales log", lag.max=50)
salesTSLogDiff <- diff(salesTSLog, lag = 12)
plot(salesTSLogDiff, xlab = "Year" ,ylab = "Sales (logarithmic scale + differencing)", main = "Recorded sales in period 1970-1982")
salesTSLogDiff <- diff(salesTSLog, lag = 2)
plot(salesTSLogDiff, xlab = "Year" ,ylab = "Sales (logarithmic scale + differencing)", main = "Recorded sales in period 1970-1982")
?diff
salesTSLogDiffSeason <- diff(salesTSLogDiff, lag = 2)
plot(salesTSLogDiff, xlab = "Year" ,ylab = "Sales (logarithmic scale + differencing)", main = "Recorded sales in period 1970-1982")
salesTSLogDiff <- diff(salesTSLog, lag = 12)
plot(salesTSLogDiff, xlab = "Year" ,ylab = "Sales (logarithmic scale + differencing)", main = "Recorded sales in period 1970-1982")
salesTSLogDiffSeason <- diff(salesTSLogDiff, lag = 2)
plot(salesTSLogDiff, xlab = "Year" ,ylab = "Sales (logarithmic scale + differencing)", main = "Recorded sales in period 1970-1982")
salesTSLogDiff <- diff(salesTSLog, lag = 12)
plot(salesTSLogDiff, xlab = "Year" ,ylab = "Sales (logarithmic scale + differencing)", main = "Recorded sales in period 1970-1982")
salesTSLogDiffSeason <- diff(salesTSLogDiff, lag = 2)
plot(salesTSLogDiffSeason, xlab = "Year" ,ylab = "Sales (logarithmic scale + differencing)", main = "Recorded sales in period 1970-1982")
salesTSLogDiffSeason <- diff(salesTSLogDiff, lag = 12)
plot(salesTSLogDiffSeason, xlab = "Year" ,ylab = "Sales (logarithmic scale + differencing)", main = "Recorded sales in period 1970-1982")
salesTSLogDiff <- diff(salesTSLog, lag = 2)
plot(salesTSLogDiff, xlab = "Year" ,ylab = "Sales (logarithmic scale + differencing)", main = "Recorded sales in period 1970-1982")
salesTSLogDiffSeason <- diff(salesTSLogDiff, lag = 12)
plot(salesTSLogDiffSeason, xlab = "Year" ,ylab = "Sales (logarithmic scale + differencing)", main = "Recorded sales in period 1970-1982")
salesTSLogDiff <- diff(salesTSLog, lag = 2)
plot(salesTSLogDiff, xlab = "Year" ,ylab = "Sales (logarithmic scale + differencing)", main = "Recorded sales in period 1970-1982")
salesTSLogDiff <- diff(salesTSLog, lag = 2)
plot(salesTSLogDiff, xlab = "Year" ,ylab = "Sales (logarithmic scale + differencing)", main = "Recorded sales in period 1970-1982")
salesTSLogDiff <- diff(salesTSLog, lag = 2)
plot(salesTSLogDiff, xlab = "Year" ,ylab = "Sales (logarithmic scale + season differencing)", main = "Recorded sales in period 1970-1982")
salesTSLogDiffSeason <- diff(salesTSLogDiff, lag = 12)
plot(salesTSLogDiffSeason, xlab = "Year" ,ylab = "Sales (logarithmic scale + differencing)", main = "Recorded sales in period 1970-1982")
salesTSLogDiffSeason <- diff(salesTSLogDiff, lag = 12)
plot(salesTSLogDiffSeason, xlab = "Year" ,ylab = "Sales (logarithmic scale + season differencing + trend differencing)", main = "Recorded sales in period 1970-1982")
salesTSLogDiffSeason <- diff(salesTSLogDiff, lag = 12)
plot(salesTSLogDiffSeason, xlab = "Year" ,ylab = "Sales (logarithmic + season + trend differencing)", main = "Recorded sales in period 1970-1982")
salesTSLogDiff <- diff(salesTSLog, lag = 2)
plot(salesTSLogDiff, xlab = "Year" ,ylab = "Sales (logarithmic + season differencing)", main = "Recorded sales in period 1970-1982")
salesTSLog <- log(salesTS)
plot(salesTSLog, xlab = "Year" ,ylab = "Sales (logarithmic)", main = "Recorded sales in period 1970-1982")
salesTSLogDiffSeason <- diff(salesTSLogDiff, lag = 12)
plot(salesTSLogDiffSeason, xlab = "Year" ,ylab = "Sales (logarithmic + season + trend differencing)", main = "Recorded sales in period 1970-1982")
par(mfrow = c(1,2))
acf(salesTS, main = "sales", lag.max=50)
acf(salesTSLogDiffSeason, main = "sales log", lag.max=50)
par(mfrow = c(2,2))
acf(salesTS, main = "sales", lag.max=50)
acf(salesTSLogDiffSeason, main = "sales log", lag.max=50)
pacf(salesTS, main = "sales", lag.max=50)
pacf(salesTSLogDiffSeason, main = "sales log", lag.max=50)
par(mfrow = c(2,2))
acf(salesTS, main = "sales", lag.max=50, main = "ACF original sales")
par(mfrow = c(2,2))
acf(salesTS, lag.max=50, main = "ACF original sales")
acf(salesTSLogDiffSeason, lag.max=50, main = "ACF log and differencing sales")
pacf(salesTS, lag.max=50, main = "PACF original sales")
pacf(salesTSLogDiffSeason, lag.max=50, main = "PACF log and differencing sales)
par(mfrow = c(2,2))
acf(salesTS, lag.max=50, main = "ACF original sales")
acf(salesTSLogDiffSeason, lag.max=50, main = "ACF log and differencing sales")
pacf(salesTS, lag.max=50, main = "PACF original sales")
pacf(salesTSLogDiffSeason, lag.max=50, main = "PACF log and differencing sales")
par(mfrow = c(2,2))
acf(salesTS, lag.max=50, main = "ACF original sales")
acf(salesTSLogDiffSeason, lag.max=50, main = "ACF differencing sales")
pacf(salesTS, lag.max=50, main = "PACF original sales")
pacf(salesTSLogDiffSeason, lag.max=50, main = "PACF differencing sales")
acf(salesTS, lag.max=50, main = "ACF original sales")
acf(salesTSLogDiffSeason, lag.max=50, main = "ACF differencing sales")
pacf(salesTS, lag.max=50, main = "PACF original sales")
pacf(salesTSLogDiffSeason, lag.max=50, main = "PACF differencing sales")
par(mfrow=c(1,2))
par(mar = rep(2, 4))
acf(salesTS, lag.max=50, main = "ACF original sales")
acf(salesTSLogDiffSeason, lag.max=50, main = "ACF differencing sales")
pacf(salesTS, lag.max=50, main = "PACF original sales")
pacf(salesTSLogDiffSeason, lag.max=50, main = "PACF differencing sales")
par(mfrow=c(2,2))
par(mar = rep(2, 4))
acf(salesTS, lag.max=50, main = "ACF original sales")
acf(salesTSLogDiffSeason, lag.max=50, main = "ACF differencing sales")
pacf(salesTS, lag.max=50, main = "PACF original sales")
pacf(salesTSLogDiffSeason, lag.max=50, main = "PACF differencing sales")
par(mfrow=c(2,2))
acf(salesTS, lag.max=50, main = "ACF original sales")
acf(salesTSLogDiffSeason, lag.max=50, main = "ACF differencing sales")
pacf(salesTS, lag.max=50, main = "PACF original sales")
pacf(salesTSLogDiffSeason, lag.max=50, main = "PACF differencing sales")
layout(matrix(c(1,2,3,4), nrow = 2, ncol = 2, byrow = TRUE))
acf(salesTS, lag.max=50, main = "ACF original sales")
acf(salesTSLogDiffSeason, lag.max=50, main = "ACF differencing sales")
pacf(salesTS, lag.max=50, main = "PACF original sales")
pacf(salesTSLogDiffSeason, lag.max=50, main = "PACF differencing sales")
acf(salesTS, lag.max=50, main = "ACF original sales")
acf(salesTSLogDiffSeason, lag.max=50, main = "ACF differencing sales")
pacf(salesTS, lag.max=50, main = "PACF original sales")
pacf(salesTSLogDiffSeason, lag.max=50, main = "PACF differencing sales")
acf(salesTS, lag.max=50, title = "ACF original sales")
acf(salesTSLogDiffSeason, lag.max=50, main = "ACF differencing sales")
pacf(salesTS, lag.max=50, main = "PACF original sales")
pacf(salesTSLogDiffSeason, lag.max=50, main = "PACF differencing sales")
acf(salesTS, lag.max=50, title = "ACF original sales")
acf(salesTSLogDiffSeason, lag.max=50, main = "ACF differencing sales")
pacf(salesTS, lag.max=50, main = "PACF original sales")
pacf(salesTSLogDiffSeason, lag.max=50, main = "PACF differencing sales")
par(mfrow = c(1,2))
acf(salesTS, lag.max=50, title = "ACF original sales")
acf(salesTSLogDiffSeason, lag.max=50, main = "ACF differencing sales")
pacf(salesTS, lag.max=50, main = "PACF original sales")
pacf(salesTSLogDiffSeason, lag.max=50, main = "PACF differencing sales")
par(mfrow = c(2,2))
acf(salesTS, lag.max=50, title = "ACF original sales")
acf(salesTSLogDiffSeason, lag.max=50, main = "ACF differencing sales")
pacf(salesTS, lag.max=50, main = "PACF original sales")
pacf(salesTSLogDiffSeason, lag.max=50, main = "PACF differencing sales")
par(mfrow = c(2,2))
acf(salesTS, lag.max=50, main = "ACF original sales")
acf(salesTSLogDiffSeason, lag.max=50, main = "ACF differencing sales")
pacf(salesTS, lag.max=50, main = "PACF original sales")
pacf(salesTSLogDiffSeason, lag.max=50, main = "PACF differencing sales")
